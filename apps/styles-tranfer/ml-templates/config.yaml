kind: MLApp
metadata:
  name: styles-transfer
spec:
  package_manager: pip3
  default_mount_path: "/notebooks"
  tasks:
  - name: arbitrary-style
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      images:
        gpu: kuberlab/tensorflow:gpu-36-1.9.0-full
        cpu: kuberlab/tensorflow:cpu-36-1.9.0-full
      command: python arbitrary-styles.py --worker --images "$DATA_DIR/*.jpg" --styles  "./data/styles/*.jpg" --batch_size 8 --warm_start_from $PRETRAINED_DIR/model.ckpt --log_step_count_steps 1 --save_summary_steps 10 --learning_rate 1e-5 --content_weights 2.0  --style_weights 0.5e-3 --vgg16 $VGG_DIR/vgg_16.ckpt --image_size 256
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 1Gi
        limits:
          cpu: 1000m
          memory: 8Gi
      port: 2222
      default_volume_mapping: true
  - name: multi-style
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      images:
        gpu: kuberlab/tensorflow:gpu-36-1.9.0-full
        cpu: kuberlab/tensorflow:cpu-36-1.9.0-full
      command: python multi_styles.py --worker --images "$DATA_DIR/*.jpg" --styles  "./data/styles/*.jpg" --batch_size 8  --vgg19 $VGG_DIR/vgg19.mat --epoch 10 --content_weights 2 --style_weights 0.5e-3
      workdir: "$SRC_DIR"
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 1Gi
        limits:
          cpu: 1000m
          memory: 8Gi
      port: 2222
      default_volume_mapping: true
  uix:
  - name: jupyter
    displayName: Jupyter
    images:
      gpu: kuberlab/tensorflow:gpu-36-1.9.0-full
      cpu: kuberlab/tensorflow:cpu-36-1.9.0-full
    resources:
      requests:
        cpu: 100m
        memory: 125Mi
      limits:
        cpu: 1000m
        memory: 2Gi
    ports:
    - port: 8888
      targetPort: 8888
      protocol: TCP
      name: http
    default_volume_mapping: true
  - name: tensorboard
    displayName: Tensorboard
    command: "tensorboard --logdir=$TRAINING_DIR"
    images:
      cpu: kuberlab/tensorflow:cpu-36-1.9.0-full
    ports:
    - port: 6006
      targetPort: 6006
      protocol: TCP
      name: http
    volumes:
    - name: training
  serving:
  - name: serving
    displayName: TF Serving
    images:
      gpu: "kuberlab/serving:latest-gpu"
      cpu: "kuberlab/serving:latest"
    command: "kuberlab-serving --port=9000 --driver tensorflow --model-path=$model_path"
    resources:
      accelerators:
        gpu: 0
      requests:
        cpu: 100m
        memory: 125Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    spec:
      params:
      - name: images
        type: byte
      rawInput: true
      model: any
      outFilter:
        - result
      outMimeType: "image/png"
    ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
      name: http
    volumes:
    - name: training
  volumes:
  - isLibDir: false
    name: training
    clusterStorage: {{ .storage.value }}
  - gitRepo:
      repository: https://github.com/kibernetika-ai/demo-zoo
    isLibDir: false
    name: src
    subPath: "demo-zoo"
  - isLibDir: true
    name: lib
    clusterStorage: {{ .storage.value }}
  {{- if .dataset.value }}
  - isLibDir: false
    name: data
    datasetFS:
      workspace: {{ .dataset.workspace }}
      dataset: {{ .dataset.value }}
      version: {{ .dataset.version }}
  {{ end }}
  {{- if .vgg.value }}
  - isLibDir: false
    name: vgg
    model:
      workspace: {{ .vgg.workspace }}
      model: {{ .vgg.value }}
      version: {{ .vgg.version }}
  {{ end }}
  {{- if .pretrained.value }}
  - isLibDir: false
    name: pretrained
    model:
      workspace: {{ .pretrained.workspace }}
      model: {{ .pretrained.value }}
      version: {{ .pretrained.version }}
  {{ end }}
